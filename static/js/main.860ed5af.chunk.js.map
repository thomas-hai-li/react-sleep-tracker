{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/SleepGoal.js","utils/Time.js","components/ResetedDeficit.js","components/SleepEntry.js","components/SleepEntriesList.js","components/AddSleepEntry.js","App.js","index.js"],"names":["Header","icon","Math","floor","random","className","state","action","sleepEntries","type","localStorage","setItem","payload","sleepHoursGoal","filter","e","id","JSON","stringify","initialState","getItem","parse","map","dateAdded","Date","date","startTime","endTime","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","updateSleepHoursGoal","numHour","deleteSleepEntry","addSleepEntry","sleepEntry","SleepGoal","useContext","onChange","newNum","digitPressed","length","isNaN","onGoalChange","target","millisecToHHMM","mils","sec_num","parseInt","hours","minutes","RestedDeficit","averageDeficitHHMM","numRestedDays","reduce","num","entry","durationHours","deficitEntries","averageDeficitMillisec","SleepEntry","durationHHMM","notes","startTimeHHMM","toLocaleTimeString","substring","endTimeHHMM","toDateString","onClick","SleepEntriesList","key","AddSleepEntry","useState","setDate","setStartTime","setEndTime","setNotes","timezone","timeZoneName","split","today","useEffect","currentDate","time","newStartTime","getHours","setHours","newEndTime","onSubmit","preventDefault","durationMillisec","getTime","alert","newSleepEntry","htmlFor","autoComplete","spellCheck","autoCorrect","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.860ed5af.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n  const rand = Math.floor(Math.random() * 2 + 1);\r\n  const icon = rand % 2 === 0 ? 'ðŸŒ™' : 'ðŸ’¤';\r\n\r\n  return (\r\n    <h2 className=\"header\">\r\n      Restly.app<sup>\r\n        <sup>{icon}</sup>\r\n      </sup>\r\n    </h2>\r\n  );\r\n};\r\n","export default (state, action) => {\r\n  let sleepEntries;\r\n  switch (action.type) {\r\n    case 'UPDATE_SLEEPHOURSGOAL':\r\n      localStorage.setItem('sleepHoursGoal', action.payload);\r\n      return {\r\n        ...state,\r\n        sleepHoursGoal: action.payload\r\n      };\r\n    case 'DELETE_SLEEPENTRY':\r\n      sleepEntries = state.sleepEntries.filter((e) => e.id !== action.payload);\r\n      localStorage.setItem('sleepEntries', JSON.stringify(sleepEntries));\r\n      return {\r\n        ...state,\r\n        sleepEntries\r\n      };\r\n    case 'ADD_SLEEPENTRY':\r\n      sleepEntries = [ action.payload, ...state.sleepEntries ];\r\n      localStorage.setItem('sleepEntries', JSON.stringify(sleepEntries));\r\n      return {\r\n        ...state,\r\n        sleepEntries\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// initial state\r\nconst sleepHoursGoal = +localStorage.getItem('sleepHoursGoal') || 8;\r\nconst sleepEntries = localStorage.getItem('sleepEntries')\r\n  ? JSON.parse(localStorage.getItem('sleepEntries')).map((e) => {\r\n      e.dateAdded = new Date(e.dateAdded);\r\n      e.date = new Date(e.date);\r\n      e.startTime = new Date(e.startTime);\r\n      e.endTime = new Date(e.endTime);\r\n      return e;\r\n    })\r\n  : [];\r\n\r\nconst initialState = {\r\n  sleepHoursGoal,\r\n  sleepEntries\r\n};\r\n\r\n// create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [ state, dispatch ] = useReducer(AppReducer, initialState);\r\n\r\n  // actions\r\n  function updateSleepHoursGoal(numHour) {\r\n    dispatch({\r\n      type: 'UPDATE_SLEEPHOURSGOAL',\r\n      payload: numHour\r\n    });\r\n  }\r\n\r\n  function deleteSleepEntry(id) {\r\n    dispatch({\r\n      type: 'DELETE_SLEEPENTRY',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addSleepEntry(sleepEntry) {\r\n    dispatch({\r\n      type: 'ADD_SLEEPENTRY',\r\n      payload: sleepEntry\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        sleepHoursGoal: state.sleepHoursGoal,\r\n        sleepEntries: state.sleepEntries,\r\n        updateSleepHoursGoal,\r\n        deleteSleepEntry,\r\n        addSleepEntry\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const SleepGoal = () => {\r\n  const { sleepHoursGoal, updateSleepHoursGoal } = useContext(GlobalContext);\r\n\r\n  function onGoalChange(newNum) {\r\n    const digitPressed = +newNum[newNum.length - 1];\r\n\r\n    // within normal range\r\n    if (digitPressed <= 9 && digitPressed >= 1 && !isNaN(digitPressed)) {\r\n      updateSleepHoursGoal(digitPressed);\r\n    }\r\n    else {\r\n      updateSleepHoursGoal(sleepHoursGoal)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"sleep-goal\">\r\n      <h4>\r\n        My Goal <span className=\"hint\">(click to edit)</span>\r\n      </h4>\r\n      <input type=\"number\" className='inputHoursGoal' value={sleepHoursGoal} onChange={(e) => onGoalChange(e.target.value)} />\r\n      <h1>\r\n        hours<span className=\"hint\"> per night</span>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n","export const millisecToHHMM = (mils) => {\r\n  var sec_num = parseInt(mils / 1000, 10);\r\n  var hours = Math.floor(sec_num / 3600);\r\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\r\n\r\n  if (hours < 10) {\r\n    hours = '0' + hours;\r\n  }\r\n  if (minutes < 10) {\r\n    minutes = '0' + minutes;\r\n  }\r\n  return `${hours}:${minutes}`;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { millisecToHHMM } from '../utils/Time';\r\n\r\nexport const RestedDeficit = () => {\r\n  const { sleepHoursGoal, sleepEntries } = useContext(GlobalContext);\r\n\r\n  const numRestedDays = sleepEntries.reduce((num, entry) => {\r\n    if (entry.durationHours >= sleepHoursGoal) {\r\n      num += 1;\r\n    }\r\n    return num;\r\n  }, 0);\r\n\r\n  // Calculate average deficit in HH:MM format\r\n\r\n  let averageDeficitHHMM;\r\n  const deficitEntries = sleepEntries.filter((entry) => entry.durationHours < sleepHoursGoal);\r\n\r\n  if (deficitEntries.length !== 0) {\r\n    const sumDeficitHours = deficitEntries.reduce((num, entry) => {\r\n      return num + (sleepHoursGoal - entry.durationHours);\r\n    }, 0);\r\n    const averageDeficitMillisec = sumDeficitHours * 3.6e6 / deficitEntries.length;\r\n    averageDeficitHHMM = millisecToHHMM(averageDeficitMillisec);\r\n  } else {\r\n    averageDeficitHHMM = '0:00';\r\n  }\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Rested Nights</h4>\r\n        <p className=\"stats plus\">{numRestedDays}</p>\r\n      </div>\r\n      <div>\r\n        <h4>AVG Deficit</h4>\r\n        <p className=\"stats minus\">{averageDeficitHHMM || '0:00'}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const SleepEntry = ({ sleepEntry }) => {\r\n  const { sleepHoursGoal, deleteSleepEntry } = useContext(GlobalContext);\r\n  const { id, date, startTime, endTime, notes, durationHHMM, durationHours } = sleepEntry;\r\n\r\n  const startTimeHHMM = startTime.toLocaleTimeString().substring(0, 5);\r\n  const endTimeHHMM = endTime.toLocaleTimeString().substring(0, 5);\r\n\r\n  return (\r\n    <li className={durationHours < sleepHoursGoal ? 'minus' : 'plus'}>\r\n      {date.toDateString()}{' '}\r\n      <span className=\"timeRange\">\r\n        ({startTimeHHMM}â†’{endTimeHHMM})\r\n      </span>{' '}\r\n      <span>{durationHHMM}</span>\r\n      <button className=\"delete-btn\" onClick={() => deleteSleepEntry(id)}>\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { SleepEntry } from './SleepEntry';\r\n\r\nexport const SleepEntriesList = () => {\r\n  const { sleepEntries } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Sleep Log</h3>\r\n      <ul className=\"list\">{sleepEntries.map((e) => <SleepEntry key={e.id} sleepEntry={e} />)}</ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { millisecToHHMM } from '../utils/Time';\r\n\r\nexport const AddSleepEntry = () => {\r\n  const [date, setDate] = useState(null);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [endTime, setEndTime] = useState(null);\r\n  const [notes, setNotes] = useState('');\r\n\r\n  const { addSleepEntry } = useContext(GlobalContext);\r\n\r\n  const timezone = new Date().toLocaleTimeString('en-us', { timeZoneName: 'short' }).split(' ')[2];\r\n  const today = new Date().toDateString();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!date || !startTime || !endTime) {\r\n      return;\r\n    }\r\n    const durationMillisec = endTime.getTime() - startTime.getTime();\r\n    if (durationMillisec < 0) {\r\n      alert('Enter a valid time range.');\r\n      return;\r\n    }\r\n\r\n    const durationHHMM = millisecToHHMM(durationMillisec);\r\n    const durationHours = durationMillisec / 3.6e6;\r\n\r\n    const newSleepEntry = {\r\n      id: Math.floor(Math.random() * 1000000000000),\r\n      dateAdded: new Date(),\r\n      date,\r\n      startTime,\r\n      endTime,\r\n      notes,\r\n      durationHHMM,\r\n      durationHours\r\n    };\r\n\r\n    addSleepEntry(newSleepEntry);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (date) {\r\n        let currentDate = date.toDateString();\r\n        if (startTime) {\r\n          let time = startTime.toLocaleTimeString();\r\n          let newStartTime = new Date(`${currentDate} ${time} ${timezone}`);\r\n          if (newStartTime.getHours() >= 12) {\r\n            newStartTime.setHours(newStartTime.getHours() - 24); // set the start time date to the day before if time is in PM\r\n          }\r\n          setStartTime(newStartTime);\r\n        }\r\n        if (endTime) {\r\n          let time = endTime.toLocaleTimeString();\r\n          let newEndTime = new Date(`${currentDate} ${time} ${timezone}`);\r\n          setEndTime(newEndTime);\r\n        }\r\n      }\r\n    },\r\n    [date]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add new entry</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <label htmlFor=\"date\">Date</label>\r\n        <div className=\"form-control\">\r\n          <input type=\"date\" onChange={(e) => setDate(new Date(e.target.value + ' ' + timezone))} />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <div className=\"input-label-group\">\r\n            <label htmlFor=\"amount\">Shut eye</label>\r\n            <input\r\n              type=\"time\"\r\n              onChange={(e) => {\r\n                let newStartTime;\r\n                if (date) {\r\n                  newStartTime = new Date(`${date.toDateString()} ${e.target.value} ${timezone}`);\r\n                } else {\r\n                  newStartTime = new Date(`${today} ${e.target.value} ${timezone}`);\r\n                }\r\n                if (newStartTime.getHours() >= 12) {\r\n                  newStartTime.setHours(newStartTime.getHours() - 24); // set the start time date to the day before if time is in PM\r\n                }\r\n                setStartTime(newStartTime);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"input-label-group\">\r\n            <label htmlFor=\"amount\">Out of bed</label>\r\n            <input\r\n              type=\"time\"\r\n              onChange={(e) => {\r\n                if (date) {\r\n                  setEndTime(new Date(`${date.toDateString()} ${e.target.value} ${timezone}`));\r\n                } else {\r\n                  setEndTime(new Date(`${today} ${e.target.value} ${timezone}`));\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <label htmlFor=\"note\">Notes</label>\r\n        <div className=\"form-control\">\r\n          <textarea\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            spellCheck=\"false\"\r\n            autoCorrect=\"off\"\r\n            onChange={(e) => setNotes(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add entry</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Header } from './components/Header';\r\nimport { SleepGoal } from './components/SleepGoal';\r\nimport { RestedDeficit } from './components/ResetedDeficit';\r\nimport { SleepEntriesList } from './components/SleepEntriesList';\r\nimport { AddSleepEntry } from './components/AddSleepEntry';\r\n\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <div className=\"container\">\r\n        <Header />\r\n        <SleepGoal />\r\n        <RestedDeficit />\r\n        <SleepEntriesList />\r\n        <AddSleepEntry />\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}